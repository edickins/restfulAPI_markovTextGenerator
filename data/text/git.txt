Git index format
================
== The Git index file has the following format
  All binary numbers are in network byte order. Version 2 is described
  here unless stated otherwise.
   - A 12-byte header consisting of
     4-byte signature:
       The signature is { 'D', 'I', 'R', 'C' } (stands for "dircache")
     4-byte version number:
       The current supported versions are 2, 3 and 4.
     32-bit number of index entries.
   - A number of sorted index entries (see below).
   - Extensions
     Extensions are identified by signature. Optional extensions can
     be ignored if Git does not understand them.
     Git currently supports cached tree and resolve undo extensions.
     4-byte extension signature. If the first byte is 'A'..'Z' the
     extension is optional and can be ignored.
     32-bit size of the extension
     Extension data
   - 160-bit SHA-1 over the content of the index file before this
     checksum.
== Index entry
  Index entries are sorted in ascending order on the name field,
  interpreted as a string of unsigned bytes (i.e. memcmp() order, no
  localization, no special casing of directory separator '/'). Entries
  with the same name are sorted by their stage field.
  32-bit ctime seconds, the last time a file's metadata changed
    this is stat(2) data
  32-bit ctime nanosecond fractions
    this is stat(2) data
  32-bit mtime seconds, the last time a file's data changed
    this is stat(2) data
  32-bit mtime nanosecond fractions
    this is stat(2) data
  32-bit dev
    this is stat(2) data
  32-bit ino
    this is stat(2) data
  32-bit mode, split into (high to low bits)
    4-bit object type
      valid values in binary are 1000 (regular file), 1010 (symbolic link)
      and 1110 (gitlink)
    3-bit unused
    9-bit unix permission. Only 0755 and 0644 are valid for regular files.
    Symbolic links and gitlinks have value 0 in this field.
  32-bit uid
    this is stat(2) data
  32-bit gid
    this is stat(2) data
  32-bit file size
    This is the on-disk size from stat(2), truncated to 32-bit.
  160-bit SHA-1 for the represented object
  A 16-bit 'flags' field split into (high to low bits)
    1-bit assume-valid flag
    1-bit extended flag (must be zero in version 2)
    2-bit stage (during merge)
    12-bit name length if the length is less than 0xFFF; otherwise 0xFFF
    is stored in this field.
  (Version 3 or later) A 16-bit field, only applicable if the
  "extended flag" above is 1, split into (high to low bits).
    1-bit reserved for future
    1-bit skip-worktree flag (used by sparse checkout)
    1-bit intent-to-add flag (used by "git add -N")
    13-bit unused, must be zero
  Entry path name (variable length) relative to top level directory
    (without leading slash). '/' is used as path separator. The special
    path components ".", ".." and ".git" (without quotes) are disallowed.
    Trailing slash is also disallowed.
    The exact encoding is undefined, but the '.' and '/' characters
    are encoded in 7-bit ASCII and the encoding cannot contain a NUL
    byte (iow, this is a UNIX pathname).
  (Version 4) In version 4, the entry path name is prefix-compressed
    relative to the path name for the previous entry (the very first
    entry is encoded as if the path name for the previous entry is an
    empty string).  At the beginning of an entry, an integer N in the
    variable width encoding (the same encoding as the offset is encoded
    for OFS_DELTA pack entries; see pack-format.txt) is stored, followed
    by a NUL-terminated string S.  Removing N bytes from the end of the
    path name for the previous entry, and replacing it with the string S
    yields the path name for this entry.
  1-8 nul bytes as necessary to pad the entry to a multiple of eight bytes
  while keeping the name NUL-terminated.
  (Version 4) In version 4, the padding after the pathname does not
  exist.
  Interpretation of index entries in split index mode is completely
  different. See below for details.
== Extensions
=== Cached tree
  Cached tree extension contains pre-computed hashes for trees that can
  be derived from the index. It helps speed up tree object generation
  from index for a new commit.
  When a path is updated in index, the path must be invalidated and
  removed from tree cache.
  The signature for this extension is { 'T', 'R', 'E', 'E' }.
  A series of entries fill the entire extension; each of which
  consists of:
  - NUL-terminated path component (relative to its parent directory);
  - ASCII decimal number of entries in the index that is covered by the
    tree this entry represents (entry_count);
  - A space (ASCII 32);
  - ASCII decimal number that represents the number of subtrees this
    tree has;
  - A newline (ASCII 10); and
  - 160-bit object name for the object that would result from writing
    this span of index as a tree.
  An entry can be in an invalidated state and is represented by having
  a negative number in the entry_count field. In this case, there is no
  object name and the next entry starts immediately after the newline.
  When writing an invalid entry, -1 should always be used as entry_count.
  The entries are written out in the top-down, depth-first order.  The
  first entry represents the root level of the repository, followed by the
  first subtree---let's call this A---of the root level (with its name
  relative to the root level), followed by the first subtree of A (with
  its name relative to A), ...
=== Resolve undo
  A conflict is represented in the index as a set of higher stage entries.
  When a conflict is resolved (e.g. with "git add path"), these higher
  stage entries will be removed and a stage-0 entry with proper resolution
  is added.
  When these higher stage entries are removed, they are saved in the
  resolve undo extension, so that conflicts can be recreated (e.g. with
  "git checkout -m"), in case users want to redo a conflict resolution
  from scratch.
  The signature for this extension is { 'R', 'E', 'U', 'C' }.
  A series of entries fill the entire extension; each of which
  consists of:
  - NUL-terminated pathname the entry describes (relative to the root of
    the repository, i.e. full pathname);
  - Three NUL-terminated ASCII octal numbers, entry mode of entries in
    stage 1 to 3 (a missing stage is represented by "0" in this field);
    and
  - At most three 160-bit object names of the entry in stages from 1 to 3
    (nothing is written for a missing stage).
=== Split index
  In split index mode, the majority of index entries could be stored
  in a separate file. This extension records the changes to be made on
  top of that to produce the final index.
  The signature for this extension is { 'l', 'i', 'n', 'k' }.
  The extension consists of:
  - 160-bit SHA-1 of the shared index file. The shared index file path
    is $GIT_DIR/sharedindex.<SHA-1>. If all 160 bits are zero, the
    index does not require a shared index file.
  - An ewah-encoded delete bitmap, each bit represents an entry in the
    shared index. If a bit is set, its corresponding entry in the
    shared index will be removed from the final index.  Note, because
    a delete operation changes index entry positions, but we do need
    original positions in replace phase, it's best to just mark
    entries for removal, then do a mass deletion after replacement.
  - An ewah-encoded replace bitmap, each bit represents an entry in
    the shared index. If a bit is set, its corresponding entry in the
    shared index will be replaced with an entry in this index
    file. All replaced entries are stored in sorted order in this
    index. The first "1" bit in the replace bitmap corresponds to the
    first index entry, the second "1" bit to the second entry and so
    on. Replaced entries may have empty path names to save space.
  The remaining index entries after replaced ones will be added to the
  final index. These added entries are also sorted by entry name then
  stage.
== Untracked cache
  Untracked cache saves the untracked file list and necessary data to
  verify the cache. The signature for this extension is { 'U', 'N',
  'T', 'R' }.
  The extension starts with
  - A sequence of NUL-terminated strings, preceded by the size of the
    sequence in variable width encoding. Each string describes the
    environment where the cache can be used.
  - Stat data of $GIT_DIR/info/exclude. See "Index entry" section from
    ctime field until "file size".
  - Stat data of core.excludesfile
  - 32-bit dir_flags (see struct dir_struct)
  - 160-bit SHA-1 of $GIT_DIR/info/exclude. Null SHA-1 means the file
    does not exist.
  - 160-bit SHA-1 of core.excludesfile. Null SHA-1 means the file does
    not exist.
  - NUL-terminated string of per-dir exclude file name. This usually
    is ".gitignore".
  - The number of following directory blocks, variable width
    encoding. If this number is zero, the extension ends here with a
    following NUL.
  - A number of directory blocks in depth-first-search order, each
    consists of
    - The number of untracked entries, variable width encoding.
    - The number of sub-directory blocks, variable width encoding.
    - The directory name terminated by NUL.
    - A number of untrached file/dir names terminated by NUL.
The remaining data of each directory block is grouped by type:
  - An ewah bitmap, the n-th bit marks whether the n-th directory has
    valid untracked cache entries.
  - An ewah bitmap, the n-th bit records "check-only" bit of
    read_directory_recursive() for the n-th directory.
  - An ewah bitmap, the n-th bit indicates whether SHA-1 and stat data
    is valid for the n-th directory and exists in the next data.
  - An array of stat data. The n-th data corresponds with the n-th
    "one" bit in the previous ewah bitmap.
  - An array of SHA-1. The n-th SHA-1 corresponds with the n-th "one" bit
    in the previous ewah bitmap.
  - One NUL.
  ##
## httpd.conf -- Apache HTTP server configuration file
##
# Based upon the NCSA server configuration files originally by Rob McCool.
# This is the main Apache server configuration file.  It contains the
# configuration directives that give the server its instructions.
# See  for detailed information about
# the directives.
# Do NOT simply read the instructions in here without understanding
# what they do.  They're here only as hints or reminders.  If you are unsure
# consult the online docs. You have been warned.
# After this file is processed, the server will look for and process
# /usr/local/apache_t3.1/conf/srm.conf and then /usr/local/apache_t3.1/conf/access.conf
# unless you have overridden these with ResourceConfig and/or
# AccessConfig directives here.
# The configuration directives are grouped into three basic sections:
#  1. Directives that control the operation of the Apache server process as a
#     whole (the 'global environment').
#  2. Directives that define the parameters of the 'main' or 'default' server,
#     which responds to requests that aren't handled by a virtual host.
#     These directives also provide default values for the settings
#     of all virtual hosts.
#  3. Settings for virtual hosts, which allow Web requests to be sent to
#     different IP addresses or hostnames and have them handled by the
#     same Apache server process.
# Configuration and logfile names: If the filenames you specify for many
# of the server's control files begin with "/" (or "drive:/" for Win32), the
# server will use that explicit path.  If the filenames do *not* begin
# with "/", the value of ServerRoot is prepended -- so "logs/foo.log"
# with ServerRoot set to "/usr/local/apache" will be interpreted by the
# server as "/usr/local/apache/logs/foo.log".
### Section 1: Global Environment
# The directives in this section affect the overall operation of Apache,
# such as the number of concurrent requests it can handle or where it
# can find its configuration files.
# ServerType is either inetd, or standalone.  Inetd mode is only supported on
# Unix platforms.
ServerType standalone
# ServerRoot: The top of the directory tree under which the server's
# configuration, error, and log files are kept.
# NOTE!  If you intend to place this on an NFS (or otherwise network)
# mounted filesystem then please read the LockFile documentation
# (available at );
# you will save yourself a lot of trouble.
# Do NOT add a slash at the end of the directory path.
ServerRoot "/usr/local/apache_t3.1"
# The LockFile directive sets the path to the lockfile used when Apache
# is compiled with either USE_FCNTL_SERIALIZED_ACCEPT or
# USE_FLOCK_SERIALIZED_ACCEPT. This directive should normally be left at
# its default value. The main reason for changing it is if the logs
# directory is NFS mounted, since the lockfile MUST BE STORED ON A LOCAL
# DISK. The PID of the main server process is automatically appended to
# the filename.
LockFile /usr/local/apache_t3.1/logs/httpd.lock
# PidFile: The file in which the server should record its process
# identification number when it starts.
PidFile /usr/local/apache_t3.1/logs/httpd.pid
# ScoreBoardFile: File used to store internal server process information.
# Not all architectures require this.  But if yours does (you'll know because
# this file will be  created when you run Apache) then you *must* ensure that
# no two invocations of Apache share the same scoreboard file.
ScoreBoardFile /usr/local/apache_t3.1/logs/httpd.scoreboard
# In the standard configuration, the server will process this file,
# srm.conf, and access.conf in that order.  The latter two files are
# now distributed empty, as it is recommended that all directives
# be kept in a single file for simplicity.  The commented-out values
# below are the built-in defaults.  You can have the server ignore
# these files altogether by using "/dev/null" (for Unix) or
# "nul" (for Win32) for the arguments to the directives.
#ResourceConfig conf/srm.conf
#AccessConfig conf/access.conf
# Timeout: The number of seconds before receives and sends time out.
Timeout 300
# KeepAlive: Whether or not to allow persistent connections (more than
# one request per connection). Set to "Off" to deactivate.
KeepAlive On
# MaxKeepAliveRequests: The maximum number of requests to allow
# during a persistent connection. Set to 0 to allow an unlimited amount.
# We recommend you leave this number high, for maximum performance.
MaxKeepAliveRequests 100
# KeepAliveTimeout: Number of seconds to wait for the next request from the
# same client on the same connection.
KeepAliveTimeout 15
# Server-pool size regulation.  Rather than making you guess how many
# server processes you need, Apache dynamically adapts to the load it
# sees --- that is, it tries to maintain enough server processes to
# handle the current load, plus a few spare servers to handle transient
# load spikes (e.g., multiple simultaneous requests from a single
# Netscape browser).
# It does this by periodically checking how many servers are waiting
# for a request.  If there are fewer than MinSpareServers, it creates
# a new spare.  If there are more than MaxSpareServers, some of the
# spares die off.  The default values are probably OK for most sites.
MinSpareServers 5
MaxSpareServers 10
# Number of servers to start initially --- should be a reasonable ballpark
# figure.
StartServers 5
# Limit on total number of servers running, i.e., limit on the number
# of clients who can simultaneously connect --- if this limit is ever
# reached, clients will be LOCKED OUT, so it should NOT BE SET TOO LOW.
# It is intended mainly as a brake to keep a runaway server from taking
# the system with it as it spirals down...
MaxClients 150
# MaxRequestsPerChild: the number of requests each child process is
# allowed to process before the child dies.  The child will exit so
# as to avoid problems after prolonged use when Apache (and maybe the
# libraries it uses) leak memory or other resources.  On most systems, this
# isn't really needed, but a few (such as Solaris) do have notable leaks
# in the libraries. For these platforms, set to something like 10000
# or so; a setting of 0 means unlimited.
# NOTE: This value does not include keepalive requests after the initial
#       request per connection. For example, if a child process handles
#       an initial request and 10 subsequent "keptalive" requests, it
#       would only count as 1 request towards this limit.
MaxRequestsPerChild 0
# Listen: Allows you to bind Apache to specific IP addresses and/or
# ports, in addition to the default. See also the
# directive.
#Listen 3000
#Listen 12.34.56.78:80
# BindAddress: You can support virtual hosts with this option. This directive
# is used to tell the server which IP address to listen to. It can either
# contain "*", an IP address, or a fully qualified Internet domain name.
# See also the  and Listen directives.
#BindAddress *
# Dynamic Shared Object (DSO) Support
# To be able to use the functionality of a module which was built as a DSO you
# have to place corresponding `LoadModule' lines at this location so the
# directives contained in it are actually available _before_ they are used.
# Please read the file README.DSO in the Apache 1.3 distribution for more
# details about the DSO mechanism and run `httpd -l' for the list of already
# built-in (statically linked and thus always available) modules in your httpd
# binary.
# Note: The order is which modules are loaded is important.  Don't change
# the order below without expert advice.
# Example:
# LoadModule foo_module libexec/mod_foo.so
LoadModule vhost_alias_module libexec/mod_vhost_alias.so
LoadModule env_module         libexec/mod_env.so
LoadModule define_module      libexec/mod_define.so
LoadModule config_log_module  libexec/mod_log_config.so
LoadModule mime_magic_module  libexec/mod_mime_magic.so
LoadModule mime_module        libexec/mod_mime.so
LoadModule negotiation_module libexec/mod_negotiation.so
LoadModule status_module      libexec/mod_status.so
LoadModule info_module        libexec/mod_info.so
LoadModule includes_module    libexec/mod_include.so
LoadModule autoindex_module   libexec/mod_autoindex.so
LoadModule dir_module         libexec/mod_dir.so
LoadModule cgi_module         libexec/mod_cgi.so
LoadModule asis_module        libexec/mod_asis.so
LoadModule imap_module        libexec/mod_imap.so
LoadModule action_module      libexec/mod_actions.so
LoadModule speling_module     libexec/mod_speling.so
LoadModule userdir_module     libexec/mod_userdir.so
LoadModule alias_module       libexec/mod_alias.so
LoadModule jserv_module       libexec/mod_jserv.so
LoadModule rewrite_module     libexec/mod_rewrite.so
LoadModule access_module      libexec/mod_access.so
LoadModule auth_module        libexec/mod_auth.so
LoadModule anon_auth_module   libexec/mod_auth_anon.so
LoadModule dbm_auth_module    libexec/mod_auth_dbm.so
LoadModule digest_module      libexec/mod_digest.so
LoadModule proxy_module       libexec/libproxy.so
LoadModule cern_meta_module   libexec/mod_cern_meta.so
LoadModule expires_module     libexec/mod_expires.so
LoadModule headers_module     libexec/mod_headers.so
LoadModule usertrack_module   libexec/mod_usertrack.so
LoadModule unique_id_module   libexec/mod_unique_id.so
LoadModule setenvif_module    libexec/mod_setenvif.so
LoadModule ssl_module         libexec/libssl.so
#  Reconstruction of the complete module list from all available modules
#  (static and shared ones) to achieve correct module execution order.
#  [WHENEVER YOU CHANGE THE LOADMODULE SECTION ABOVE UPDATE THIS, TOO]
ClearModuleList
AddModule mod_vhost_alias.c
AddModule mod_env.c
AddModule mod_define.c
AddModule mod_log_config.c
AddModule mod_mime_magic.c
AddModule mod_mime.c
AddModule mod_negotiation.c
AddModule mod_status.c
AddModule mod_info.c
AddModule mod_include.c
AddModule mod_autoindex.c
AddModule mod_dir.c
AddModule mod_cgi.c
AddModule mod_asis.c
AddModule mod_imap.c
AddModule mod_actions.c
AddModule mod_speling.c
AddModule mod_userdir.c
AddModule mod_alias.c
AddModule mod_jserv.c
AddModule mod_rewrite.c
AddModule mod_access.c
AddModule mod_auth.c
AddModule mod_auth_anon.c
AddModule mod_auth_dbm.c
AddModule mod_digest.c
AddModule mod_proxy.c
AddModule mod_cern_meta.c
AddModule mod_expires.c
AddModule mod_headers.c
AddModule mod_usertrack.c
AddModule mod_unique_id.c
AddModule mod_so.c
AddModule mod_setenvif.c
AddModule mod_ssl.c
# ExtendedStatus controls whether Apache will generate "full" status
# information (ExtendedStatus On) or just basic information (ExtendedStatus
# Off) when the "server-status" handler is called. The default is Off.
#ExtendedStatus On
### Section 2: 'Main' server configuration
# The directives in this section set up the values used by the 'main'
# server, which responds to any requests that aren't handled by a
#  definition.  These values also provide defaults for
# any  containers you may define later in the file.
# All of these directives may appear inside  containers,
# in which case these default settings will be overridden for the
# virtual host being defined.
# If your ServerType directive (set earlier in the 'Global Environment'
# section) is set to "inetd", the next few directives don't have any
# effect since their settings are defined by the inetd configuration.
# Skip ahead to the ServerAdmin directive.
# Port: The port to which the standalone server listens. For
# ports < 1023, you will need httpd to be run as root initially.
Port 7180
##
##  SSL Support
##
##  When we also provide SSL we have to listen to the
##  standard HTTP port (see above) and to the HTTPS port
##
Listen 80
Listen 7180
Listen 7143
# If you wish httpd to run as a different user or group, you must run
# httpd as root initially and it will switch.
# User/Group: The name (or #number) of the user/group to run httpd as.
#  . On SCO (ODT 3) use "User nouser" and "Group nogroup".
#  . On HPUX you may not be able to use shared memory as nobody, and the
#    suggested workaround is to create a user www and use that user.
#  NOTE that some kernels refuse to setgid(Group) or semctl(IPC_SET)
#  when the value of (unsigned)Group is above 60000;
#  don't use Group nobody on these systems!
User webrun2
Group webrun2
# ServerAdmin: Your address, where problems with the server should be
# e-mailed.  This address appears on some server-generated pages, such
# as error documents.
ServerAdmin jkl@heechee.ccl.net
# ServerName allows you to set a host name which is sent back to clients for
# your server if it's different than the one the program would get (i.e., use
# "www" instead of the host's real name).
# Note: You cannot just invent host names and hope they work. The name you
# define here must be a valid DNS name for your host. If you don't understand
# this, ask your network administrator.
# If your host doesn't have a registered DNS name, enter its IP address here.
# You will have to access it by its address (e.g., http://123.45.67.89/)
# anyway, and this will make redirections work in a sensible way.
ServerName heechee.ccl.net
# DocumentRoot: The directory out of which you will serve your
# documents. By default, all requests are taken from this directory, but
# symbolic links and aliases may be used to point to other locations.
DocumentRoot "/usr/local/apache_t3.1/htdocs"
# Each directory to which Apache has access, can be configured with respect
# to which services and features are allowed and/or disabled in that
# directory (and its subdirectories).
# First, we configure the "default" to be a very restrictive set of
# permissions.
    Options FollowSymLinks
    AllowOverride None
# Note that from this point forward you must specifically allow
# particular features to be enabled - so if something's not working as
# you might expect, make sure that you have specifically enabled it
# below.
# This should be changed to whatever you set DocumentRoot to.
# This may also be "None", "All", or any combination of "Indexes",
# "Includes", "FollowSymLinks", "ExecCGI", or "MultiViews".
# Note that "MultiViews" must be named *explicitly* --- "Options All"
# doesn't give it to you.
    Options Indexes FollowSymLinks MultiViews
# This controls which options the .htaccess files in directories can
# override. Can also be "All", or any combination of "Options", "FileInfo",
# "AuthConfig", and "Limit"
    AllowOverride Limit AuthConfig Options
# Controls who can get stuff from this server.
    Order allow,deny
    Allow from all
# UserDir: The name of the directory which is appended onto a user's home
# directory if a ~user request is received.
    UserDir public_html
# Control access to UserDir directories.  The following is an example
# for a site where these directories are restricted to read-only.
#    AllowOverride FileInfo AuthConfig Limit
#    Options MultiViews Indexes SymLinksIfOwnerMatch IncludesNoExec
#        Order allow,deny
#        Allow from all
#        Order deny,allow
#        Deny from all
# DirectoryIndex: Name of the file or files to use as a pre-written HTML
# directory index.  Separate multiple entries with spaces.
    DirectoryIndex index.html
# AccessFileName: The name of the file to look for in each directory
# for access control information.
AccessFileName .htaccess
# The following lines prevent .htaccess files from being viewed by
# Web clients.  Since .htaccess files often contain authorization
# information, access is disallowed for security reasons.  Comment
# these lines out if you want Web visitors to see the contents of
# .htaccess files.  If you change the AccessFileName directive above,
# be sure to make the corresponding changes here.
# Also, folks tend to use names such as .htpasswd for password
# files, so this will protect those as well.
    Order allow,deny
    Deny from all
# CacheNegotiatedDocs: By default, Apache sends "Pragma: no-cache" with each
# document that was negotiated on the basis of content. This asks proxy
# servers not to cache the document. Uncommenting the following line disables
# this behavior, and proxies will be allowed to cache the documents.
#CacheNegotiatedDocs
# UseCanonicalName:  (new for 1.3)  With this setting turned on, whenever
# Apache needs to construct a self-referencing URL (a URL that refers back
# to the server the response is coming from) it will use ServerName and
# Port to form a "canonical" name.  With this setting off, Apache will
# use the hostname:port that the client supplied, when possible.  This
# also affects SERVER_NAME and SERVER_PORT in CGI scripts.
UseCanonicalName On
RewriteEngine On
RewriteLog /usr/local/apache_t3.1/logs/rewrite_log
RewriteLogLevel 2
RewriteRule ^/ROOT/examples /examples [R]
RewriteRule ^/ROOT/test /test [R]
RewriteRule ^/ROOT/admin /admin [R]
RewriteRule ^/ROOT/ROOT /ROOT [R]
RewriteRule ^/tomcat.gif /ROOT/tomcat.gif [R]
RewriteRule ^/examples/servlets$     /examples/servlets/  [R]
RewriteRule ^/examples/jsp$     /examples/jsp/  [R]
RewriteRule ^/examples$     /examples/  [R]
RewriteRule ^/admin$          /admin/  [R]
RewriteRule ^/ROOT$          /ROOT/  [R]
RewriteRule ^/test$          /test/  [R]
# TypesConfig describes where the mime.types file (or equivalent) is
# to be found.
    TypesConfig /usr/local/apache_t3.1/conf/mime.types
# DefaultType is the default MIME type the server will use for a document
# if it cannot otherwise determine one, such as from filename extensions.
# If your server contains mostly text or HTML documents, "text/plain" is
# a good value.  If most of your content is binary, such as applications
# or images, you may want to use "application/octet-stream" instead to
# keep browsers from trying to display binary files as though they are
# text.
DefaultType text/plain
# The mod_mime_magic module allows the server to use various hints from the
# contents of the file itself to determine its type.  The MIMEMagicFile
# directive tells the module where the hint definitions are located.
# mod_mime_magic is not part of the default server (you have to add
# it yourself with a LoadModule [see the DSO paragraph in the 'Global
# Environment' section], or recompile the server and include mod_mime_magic
# as part of the configuration), so it's enclosed in an  container.
# This means that the MIMEMagicFile directive will only be processed if the
# module is part of the server.
    MIMEMagicFile /usr/local/apache_t3.1/conf/magic
# HostnameLookups: Log the names of clients or just their IP addresses
# e.g., www.apache.org (on) or 204.62.129.132 (off).
# The default is off because it'd be overall better for the net if people
# had to knowingly turn this feature on, since enabling it means that
# each client request will result in AT LEAST one lookup request to the
# nameserver.
HostnameLookups Off
# ErrorLog: The location of the error log file.
# If you do not specify an ErrorLog directive within a
# container, error messages relating to that virtual host will be
# logged here.  If you *do* define an error logfile for a
# container, that host's errors will be logged there and not here.
ErrorLog /usr/local/apache_t3.1/logs/error_log
# LogLevel: Control the number of messages logged to the error_log.
# Possible values include: debug, info, notice, warn, error, crit,
# alert, emerg.
LogLevel warn
# The following directives define some format nicknames for use with
# a CustomLog directive (see below).
LogFormat "%h %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\"" combined
LogFormat "%h %l %u %t \"%r\" %>s %b" common
LogFormat "%{Referer}i -> %U" referer
LogFormat "%{User-agent}i" agent
# The location and format of the access logfile (Common Logfile Format).
# If you do not define any access logfiles within a
# container, they will be logged here.  Contrariwise, if you *do*
# define per- access logfiles, transactions will be
# logged therein and *not* in this file.
CustomLog /usr/local/apache_t3.1/logs/access_log common
# If you would like to have agent and referer logfiles, uncomment the
# following directives.
#CustomLog /usr/local/apache_t3.1/logs/referer_log referer
#CustomLog /usr/local/apache_t3.1/logs/agent_log agent
# If you prefer a single logfile with access, agent, and referer information
# (Combined Logfile Format) you can use the following directive.
#CustomLog /usr/local/apache_t3.1/logs/access_log combined
# Optionally add a line containing the server version and virtual host
# name to server-generated pages (error documents, FTP directory listings,
# mod_status and mod_info output etc., but not CGI generated documents).
# Set to "EMail" to also include a mailto: link to the ServerAdmin.
# Set to one of:  On | Off | EMail
ServerSignature On
# Aliases: Add here as many aliases as you need (with no limit). The format is
# Alias fakename realname
    #
    # Note that if you include a trailing / on fakename then the server will
    # require it to be present in the URL.  So "/icons" isn't aliased in this
    # example, only "/icons/"..
    #
    Alias /icons/ "/usr/local/apache_t3.1/icons/"
        Options Indexes MultiViews
        AllowOverride None
        Order allow,deny
        Allow from all
    #
    # ScriptAlias: This controls which directories contain server scripts.
    # ScriptAliases are essentially the same as Aliases, except that
    # documents in the realname directory are treated as applications and
    # run by the server when requested rather than as documents sent to the client.
    # The same rules about trailing "/" apply to ScriptAlias directives as to
    # Alias.
    #
    ScriptAlias /cgi-bin/ "/usr/local/apache_t3.1/cgi-bin/"
    #
    # "/usr/local/apache_t3.1/cgi-bin" should be changed to whatever your ScriptAliased
    # CGI directory exists, if you have that configured.
    #
        AllowOverride None
        Options None
        Order allow,deny
        Allow from all
# End of aliases.
# Redirect allows you to tell clients about documents which used to exist in
# your server's namespace, but do not anymore. This allows you to tell the
# clients where to look for the relocated document.
# Format: Redirect old-URI new-URL
# Directives controlling the display of server-generated directory listings.
    #
    # FancyIndexing is whether you want fancy directory indexing or standard
    #
    IndexOptions FancyIndexing
    #
    # AddIcon* directives tell the server which icon to show for different
    # files or filename extensions.  These are only displayed for
    # FancyIndexed directories.
    #
    AddIconByEncoding (CMP,/icons/compressed.gif) x-compress x-gzip
    AddIconByType (TXT,/icons/text.gif) text/*
    AddIconByType (IMG,/icons/image2.gif) image/*
    AddIconByType (SND,/icons/sound2.gif) audio/*
    AddIconByType (VID,/icons/movie.gif) video/*
    AddIcon /icons/binary.gif .bin .exe
    AddIcon /icons/binhex.gif .hqx
    AddIcon /icons/tar.gif .tar
    AddIcon /icons/world2.gif .wrl .wrl.gz .vrml .vrm .iv
    AddIcon /icons/compressed.gif .Z .z .tgz .gz .zip
    AddIcon /icons/a.gif .ps .ai .eps
    AddIcon /icons/layout.gif .html .shtml .htm .pdf
    AddIcon /icons/text.gif .txt
    AddIcon /icons/c.gif .c
    AddIcon /icons/p.gif .pl .py
    AddIcon /icons/f.gif .for
    AddIcon /icons/dvi.gif .dvi
    AddIcon /icons/uuencoded.gif .uu
    AddIcon /icons/script.gif .conf .sh .shar .csh .ksh .tcl
    AddIcon /icons/tex.gif .tex
    AddIcon /icons/bomb.gif core
    AddIcon /icons/back.gif ..
    AddIcon /icons/hand.right.gif README
    AddIcon /icons/folder.gif ^^DIRECTORY^^
    AddIcon /icons/blank.gif ^^BLANKICON^^
    #
    # DefaultIcon is which icon to show for files which do not have an icon
    # explicitly set.
    #
    DefaultIcon /icons/unknown.gif
    #
    # AddDescription allows you to place a short description after a file in
    # server-generated indexes.  These are only displayed for FancyIndexed
    # directories.
    # Format: AddDescription "description" filename
    #
    #AddDescription "GZIP compressed document" .gz
    #AddDescription "tar archive" .tar
    #AddDescription "GZIP compressed tar archive" .tgz
    #
    # ReadmeName is the name of the README file the server will look for by
    # default, and append to directory listings.
    #
    # HeaderName is the name of a file which should be prepended to
    # directory indexes.
    #
    # If MultiViews are amongst the Options in effect, the server will
    # first look for name.html and include it if found.  If name.html
    # doesn't exist, the server will then look for name.txt and include
    # it as plaintext if found.
    #
    ReadmeName README
    HeaderName HEADER
    #
    # IndexIgnore is a set of filenames which directory indexing should ignore
    # and not include in the listing.  Shell-style wildcarding is permitted.
    #
    IndexIgnore .??* *~ *# HEADER* README* RCS CVS *,v *,t
# End of indexing directives.
# Document types.
    #
    # AddEncoding allows you to have certain browsers (Mosaic/X 2.1+) uncompress
    # information on the fly. Note: Not all browsers support this.
    # Despite the name similarity, the following Add* directives have nothing
    # to do with the FancyIndexing customization directives above.
    #
    AddEncoding x-compress Z
    AddEncoding x-gzip gz tgz
    #
    # AddLanguage allows you to specify the language of a document. You can
    # then use content negotiation to give a browser a file in a language
    # it can understand.
    #
    # Note 1: The suffix does not have to be the same as the language
    # keyword --- those with documents in Polish (whose net-standard
    # language code is pl) may wish to use "AddLanguage pl .po" to
    # avoid the ambiguity with the common suffix for perl scripts.
    #
    # Note 2: The example entries below illustrate that in quite
    # some cases the two character 'Language' abbriviation is not
    # identical to the two character 'Country' code for its country,
    # E.g. 'Danmark/dk' versus 'Danish/da'.
    #
    # Note 3: In the case of 'ltz' we violate the RFC by using a three char
    # specifier. But there is 'work in progress' to fix this and get
    # the reference data for rfc1766 cleaned up.
    #
    # Danish (da) - Dutch (nl) - English (en) - Estonian (ee)
    # French (fr) - German (de) - Greek-Modern (el)
    # Italian (it) - Portugese (pt) - Luxembourgeois* (ltz)
    # Spanish (es) - Swedish (sv) - Catalan (ca) - Czech(cz)
    # Polish (pl) - Brazilian Portuguese (pt-br) - Japanese (ja)
    #
    AddLanguage da .dk
    AddLanguage nl .nl
    AddLanguage en .en
    AddLanguage et .ee
    AddLanguage fr .fr
    AddLanguage de .de
    AddLanguage el .el
    AddLanguage it .it
    AddLanguage ja .ja
    AddCharset ISO-2022-JP .jis
    AddLanguage pl .po
    AddCharset ISO-8859-2 .iso-pl
    AddLanguage pt .pt
    AddLanguage pt-br .pt-br
    AddLanguage ltz .lu
    AddLanguage ca .ca
    AddLanguage es .es
    AddLanguage sv .se
    AddLanguage cz .cz
    # LanguagePriority allows you to give precedence to some languages
    # in case of a tie during content negotiation.
    #
    # Just list the languages in decreasing order of preference. We have
    # more or less alphabetized them here. You probably want to change this.
    #
        LanguagePriority en da nl et fr de el it ja pl pt pt-br ltz ca es sv
    #
    # AddType allows you to tweak mime.types without actually editing it, or to
    # make certain files to be certain types.
    #
    # For example, the PHP 3.x module (not part of the Apache distribution - see
    # http://www.php.net) will typically use:
    #
    #AddType application/x-httpd-php3 .php3
    #AddType application/x-httpd-php3-source .phps
    #
    # And for PHP 4.x, use:
    #
    #AddType application/x-httpd-php .php
    #AddType application/x-httpd-php-source .phps
    AddType application/x-tar .tgz
    #
    # AddHandler allows you to map certain file extensions to "handlers",
    # actions unrelated to filetype. These can be either built into the server
    # or added with the Action command (see below)
    #
    # If you want to use server side includes, or CGI outside
    # ScriptAliased directories, uncomment the following lines.
    #
    # To use CGI scripts:
    #
    #AddHandler cgi-script .cgi
    #
    # To use server-parsed HTML files
    #
AddType text/html .shtml
AddHandler server-parsed .shtml
    #
    # Uncomment the following line to enable Apache's send-asis HTTP file
    # feature
    #
    #AddHandler send-as-is asis
    #
    # If you wish to use server-parsed imagemap files, use
    #
    #AddHandler imap-file map
    #
    # To enable type maps, you might want to use
    #
    #AddHandler type-map var
# End of document types.
# Action lets you define media types that will execute a script whenever
# a matching file is called. This eliminates the need for repeated URL
# pathnames for oft-used CGI file processors.
# Format: Action media/type /cgi-script/location
# Format: Action handler-name /cgi-script/location
# MetaDir: specifies the name of the directory in which Apache can find
# meta information files. These files contain additional HTTP headers
# to include when sending the document
#MetaDir .web
# MetaSuffix: specifies the file name suffix for the file containing the
# meta information.
#MetaSuffix .meta
# Customizable error response (Apache style)
#  these come in three flavors
#    1) plain text
#ErrorDocument 500 "The server made a boo boo.
#  n.b.  the (") marks it as text, it does not get output
#    2) local redirects
#ErrorDocument 404 /missing.html
#  to redirect to local URL /missing.html
#ErrorDocument 404 /cgi-bin/missing_handler.pl
#  N.B.: You can redirect to a script or a document using server-side-includes.
#    3) external redirects
#ErrorDocument 402 http://some.other_server.com/subscription_info.html
#  N.B.: Many of the environment variables associated with the original
#  request will *not* be available to such a script.
# Customize behaviour based on the browser
    #
    # The following directives modify normal HTTP response behavior.
    # The first directive disables keepalive for Netscape 2.x and browsers that
    # spoof it. There are known problems with these browser implementations.
    # The second directive is for Microsoft Internet Explorer 4.0b2
    # which has a broken HTTP/1.1 implementation and does not properly
    # support keepalive when it is used on 301 or 302 (redirect) responses.
    #
    BrowserMatch "Mozilla/2" nokeepalive
    BrowserMatch "MSIE 4\.0b2;" nokeepalive downgrade-1.0 force-response-1.0
    #
    # The following directive disables HTTP/1.1 responses to browsers which
    # are in violation of the HTTP/1.0 spec by not being able to grok a
    # basic 1.1 response.
    #
    BrowserMatch "RealPlayer 4\.0" force-response-1.0
    BrowserMatch "Java/1\.0" force-response-1.0
    BrowserMatch "JDK/1\.0" force-response-1.0
# Allow server status reports, with the URL of http://servername/server-status
# Change the ".your_domain.com" to match your domain to enable.
#    SetHandler server-status
#    Order deny,allow
#    Deny from all
#    Allow from .your_domain.com
# Allow remote server configuration reports, with the URL of
#  http://servername/server-info (requires that mod_info.c be loaded).
# Change the ".your_domain.com" to match your domain to enable.
#    SetHandler server-info
#    Order deny,allow
#    Deny from all
#    Allow from .your_domain.com
# There have been reports of people trying to abuse an old bug from pre-1.1
# days.  This bug involved a CGI script distributed as a part of Apache.
# By uncommenting these lines you can redirect these attacks to a logging
# script on phf.apache.org.  Or, you can record them yourself, using the script
# support/phf_abuse_log.cgi.
#    Deny from all
#    ErrorDocument 403 http://phf.apache.org/phf_abuse_log.cgi
# Proxy Server directives. Uncomment the following lines to
# enable the proxy server:
    #ProxyRequests On
    #
    #
    #    Order deny,allow
    #    Deny from all
    #    Allow from .your_domain.com
    #
    #
    # Enable/disable the handling of HTTP/1.1 "Via:" headers.
    # ("Full" adds the server version; "Block" removes all outgoing Via: headers)
    # Set to one of: Off | On | Full | Block
    #
    #ProxyVia On
    #
    # To enable the cache as well, edit and uncomment the following lines:
    # (no cacheing without CacheRoot)
    #
    #CacheRoot "/usr/local/apache_t3.1/proxy"
    #CacheSize 5
    #CacheGcInterval 4
    #CacheMaxExpire 24
    #CacheLastModifiedFactor 0.1
    #CacheDefaultExpire 1
    #NoCache a_domain.com another_domain.edu joes.garage_sale.com
# End of proxy directives.
### Section 3: Virtual Hosts
# VirtualHost: If you want to maintain multiple domains/hostnames on your
# machine you can setup VirtualHost containers for them.
# Please see the documentation at
# for further details before you try to setup virtual hosts.
# You may use the command line option '-S' to verify your virtual host
# configuration.
# If you want to use name-based virtual hosts you need to define at
# least one IP address (and port number) for them.
#NameVirtualHost 12.34.56.78:80
#NameVirtualHost 12.34.56.78
# VirtualHost example:
# Almost any Apache directive may go into a VirtualHost container.
#    ServerAdmin webmaster@host.some_domain.com
#    DocumentRoot /www/docs/host.some_domain.com
#    ServerName host.some_domain.com
#    ErrorLog logs/host.some_domain.com-error_log
#    CustomLog logs/host.some_domain.com-access_log common
ServerName heechee.ccl.net
ServerAdmin jkl@ccl.net
AddType application/java-archive .jar
AccessFileName .htaccess
ScriptAlias /cgi-bin/ "/usr/local/WebRoot/cgi-bin/"
    Options ExecCGI
    Order allow,deny
    Allow from all
Alias /jkl/ "/usr/local/WebRoot/jkl/"
Alias /jkl "/usr/local/WebRoot/jkl/index.shtml"
   DirectoryIndex index.shtml index.html index.cgi
   Options Indexes MultiViews FollowSymLinks ExecCGI Includes
   Order allow,deny
   Allow from all
##
##  SSL Global Context
##
##  All SSL configuration in this context applies both to
##  the main server and all SSL-enabled virtual hosts.
##
#   Some MIME-types for downloading Certificates and CRLs
AddType application/x-x509-ca-cert .crt
AddType application/x-pkcs7-crl    .crl
#   Pass Phrase Dialog:
#   Configure the pass phrase gathering process.
#   The filtering dialog program (`builtin' is a internal
#   terminal dialog) has to provide the pass phrase on stdout.
SSLPassPhraseDialog  builtin
#   Inter-Process Session Cache:
#   Configure the SSL Session Cache: First either `none'
#   or `dbm:/path/to/file' for the mechanism to use and
#   second the expiring timeout (in seconds).
#SSLSessionCache        none
#SSLSessionCache        shm:/usr/local/apache_t3.1/logs/ssl_scache(512000)
SSLSessionCache         dbm:/usr/local/apache_t3.1/logs/ssl_scache
SSLSessionCacheTimeout  300
#   Semaphore:
#   Configure the path to the mutual explusion semaphore the
#   SSL engine uses internally for inter-process synchronization.
SSLMutex  file:/usr/local/apache_t3.1/logs/ssl_mutex
#   Pseudo Random Number Generator (PRNG):
#   Configure one or more sources to seed the PRNG of the
#   SSL library. The seed data should be of good random quality.
#   WARNING! On some platforms /dev/random blocks if not enough entropy
#   is available. This means you then cannot use the /dev/random device
#   because it would lead to very long connection times (as long as
#   it requires to make more entropy available). But usually those
#   platforms additionally provide a /dev/urandom device which doesn't
#   block. So, if available, use this one instead. Read the mod_ssl User
#   Manual for more details.
SSLRandomSeed startup builtin
SSLRandomSeed connect builtin
#SSLRandomSeed startup file:/dev/random  512
#SSLRandomSeed startup file:/dev/urandom 512
#SSLRandomSeed connect file:/dev/random  512
#SSLRandomSeed connect file:/dev/urandom 512
#   Logging:
#   The home of the dedicated SSL protocol logfile. Errors are
#   additionally duplicated in the general error log file.  Put
#   this somewhere where it cannot be used for symlink attacks on
#   a real server (i.e. somewhere where only root can write).
#   Log levels are (ascending order: higher ones include lower ones):
#   none, error, warn, info, trace, debug.
SSLLog      /usr/local/apache_t3.1/logs/ssl_engine_log
SSLLogLevel info
##
## SSL Virtual Host Context
##
#  General setup for the virtual host
DocumentRoot "/usr/local/apache_t3.1/htdocs"
ServerName heechee.ccl.net
ServerAdmin jkl@heechee.ccl.net
ErrorLog /usr/local/apache_t3.1/logs/error_log
TransferLog /usr/local/apache_t3.1/logs/access_log
#   SSL Engine Switch:
#   Enable/Disable SSL for this virtual host.
SSLEngine on
#   SSL Cipher Suite:
#   List the ciphers that the client is permitted to negotiate.
#   See the mod_ssl documentation for a complete list.
#SSLCipherSuite ALL:!ADH:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP:+eNULL
#   Server Certificate:
#   Point SSLCertificateFile at a PEM encoded certificate.  If
#   the certificate is encrypted, then you will be prompted for a
#   pass phrase.  Note that a kill -HUP will prompt again. A test
#   certificate can be generated with `make certificate' under
#   built time. Keep in mind that if you've both a RSA and a DSA
#   certificate you can configure both in parallel (to also allow
#   the use of DSA ciphers, etc.)
SSLCertificateFile /usr/local/apache_t3.1/conf/ssl.crt/server.crt
#SSLCertificateFile /usr/local/apache_t3.1/conf/ssl.crt/server-dsa.crt
#   Server Private Key:
#   If the key is not combined with the certificate, use this
#   directive to point at the key file.  Keep in mind that if
#   you've both a RSA and a DSA private key you can configure
#   both in parallel (to also allow the use of DSA ciphers, etc.)
SSLCertificateKeyFile /usr/local/apache_t3.1/conf/ssl.key/server.key
#SSLCertificateKeyFile /usr/local/apache_t3.1/conf/ssl.key/server-dsa.key
#   Server Certificate Chain:
#   Point SSLCertificateChainFile at a file containing the
#   concatenation of PEM encoded CA certificates which form the
#   certificate chain for the server certificate. Alternatively
#   the referenced file can be the same as SSLCertificateFile
#   when the CA certificates are directly appended to the server
#   certificate for convinience.
#SSLCertificateChainFile /usr/local/apache_t3.1/conf/ssl.crt/ca.crt
#   Certificate Authority (CA):
#   Set the CA certificate verification path where to find CA
#   certificates for client authentication or alternatively one
#   huge file containing all of them (file must be PEM encoded)
#   Note: Inside SSLCACertificatePath you need hash symlinks
#         to point to the certificate files. Use the provided
#         Makefile to update the hash symlinks after changes.
#SSLCACertificatePath /usr/local/apache_t3.1/conf/ssl.crt
#SSLCACertificateFile /usr/local/apache_t3.1/conf/ssl.crt/ca-bundle.crt
#   Certificate Revocation Lists (CRL):
#   Set the CA revocation path where to find CA CRLs for client
#   authentication or alternatively one huge file containing all
#   of them (file must be PEM encoded)
#   Note: Inside SSLCARevocationPath you need hash symlinks
#         to point to the certificate files. Use the provided
#         Makefile to update the hash symlinks after changes.
#SSLCARevocationPath /usr/local/apache_t3.1/conf/ssl.crl
#SSLCARevocationFile /usr/local/apache_t3.1/conf/ssl.crl/ca-bundle.crl
#   Client Authentication (Type):
#   Client certificate verification type and depth.  Types are
#   none, optional, require and optional_no_ca.  Depth is a
#   number which specifies how deeply to verify the certificate
#   issuer chain before deciding the certificate is not valid.
#SSLVerifyClient require
#SSLVerifyDepth  10
#   Access Control:
#   With SSLRequire you can do per-directory access control based
#   on arbitrary complex boolean expressions containing server
#   variable checks and other lookup directives.  The syntax is a
#   mixture between C and Perl.  See the mod_ssl documentation
#   for more details.
#SSLRequire (    %{SSL_CIPHER} !~ m/^(EXP|NULL)-/ \
#            and %{SSL_CLIENT_S_DN_O} eq "Snake Oil, Ltd." \
#            and %{SSL_CLIENT_S_DN_OU} in {"Staff", "CA", "Dev"} \
#            and %{TIME_WDAY} >= 1 and %{TIME_WDAY} <= 5 \
#            and %{TIME_HOUR} >= 8 and %{TIME_HOUR} <= 20       ) \
#           or %{REMOTE_ADDR} =~ m/^192\.76\.162\.[0-9]+$/
#   SSL Engine Options:
#   Set various options for the SSL engine.
#   o FakeBasicAuth:
#     Translate the client X.509 into a Basic Authorisation.  This means that
#     the standard Auth/DBMAuth methods can be used for access control.  The
#     user name is the `one line' version of the client's X.509 certificate.
#     Note that no password is obtained from the user. Every entry in the user
#     file needs this password: `xxj31ZMTZzkVA'.
#   o ExportCertData:
#     This exports two additional environment variables: SSL_CLIENT_CERT and
#     SSL_SERVER_CERT. These contain the PEM-encoded certificates of the
#     server (always existing) and the client (only existing when client
#     authentication is used). This can be used to import the certificates
#     into CGI scripts.
#   o StdEnvVars:
#     This exports the standard SSL/TLS related `SSL_*' environment variables.
#     Per default this exportation is switched off for performance reasons,
#     because the extraction step is an expensive operation and is usually
#     useless for serving static content. So one usually enables the
#     exportation for CGI and SSI requests only.
#   o CompatEnvVars:
#     This exports obsolete environment variables for backward compatibility
#     to Apache-SSL 1.x, mod_ssl 2.0.x, Sioux 1.0 and Stronghold 2.x. Use this
#     to provide compatibility to existing CGI scripts.
#   o StrictRequire:
#     This denies access when "SSLRequireSSL" or "SSLRequire" applied even
#     under a "Satisfy any" situation, i.e. when it applies access is denied
#     and no other module can change it.
#   o OptRenegotiate:
#     This enables optimized SSL connection renegotiation handling when SSL
#     directives are used in per-directory context.
#SSLOptions +FakeBasicAuth +ExportCertData +CompatEnvVars +StrictRequire
    SSLOptions +StdEnvVars
    SSLOptions +StdEnvVars
#   SSL Protocol Adjustments:
#   The safe and default but still SSL/TLS standard compliant shutdown
#   approach is that mod_ssl sends the close notify alert but doesn't wait for
#   the close notify alert from client. When you need a different shutdown
#   approach you can use one of the following variables:
#   o ssl-unclean-shutdown:
#     This forces an unclean shutdown when the connection is closed, i.e. no
#     SSL close notify alert is send or allowed to received.  This violates
#     the SSL/TLS standard but is needed for some brain-dead browsers. Use
#     this when you receive I/O errors because of the standard approach where
#     mod_ssl sends the close notify alert.
#   o ssl-accurate-shutdown:
#     This forces an accurate shutdown when the connection is closed, i.e. a
#     SSL close notify alert is send and mod_ssl waits for the close notify
#     alert of the client. This is 100% SSL/TLS standard compliant, but in
#     practice often causes hanging connections with brain-dead browsers. Use
#     this only for browsers where you know that their SSL implementation
#     works correctly.
#   Notice: Most problems of broken clients are also related to the HTTP
#   keep-alive facility, so you usually additionally want to disable
#   keep-alive for those clients, too. Use variable "nokeepalive" for this.
SetEnvIf User-Agent ".*MSIE.*" nokeepalive ssl-unclean-shutdown
#   Per-Server Logging:
#   The home of a custom SSL log file. Use this when you want a
#   compact non-error SSL logfile on a virtual host basis.
CustomLog /usr/local/apache_t3.1/logs/ssl_request_log \
          "%t %h %{SSL_PROTOCOL}x %{SSL_CIPHER}x \"%r\" %b"
RewriteEngine On
RewriteLog /usr/local/apache_t3.1/logs/rewrite_log
RewriteLogLevel 2
RewriteRule ^/ROOT/examples /examples [R]
RewriteRule ^/ROOT/test /test [R]
RewriteRule ^/ROOT/admin /admin [R]
RewriteRule ^/ROOT/ROOT /ROOT [R]
RewriteRule ^/tomcat.gif /ROOT/tomcat.gif [R]
RewriteRule ^/examples/servlets$     /examples/servlets/  [R]
RewriteRule ^/examples/jsp$     /examples/jsp/  [R]
RewriteRule ^/examples$     /examples/  [R]
RewriteRule ^/admin$          /admin/  [R]
RewriteRule ^/ROOT$          /ROOT/  [R]
RewriteRule ^/test$          /test/  [R]
Skip to main content
 UPLOAD
 SIGN UP | LOG IN
BOOKS
VIDEO
AUDIO
SOFTWARE
IMAGES
ABOUT  BLOG  PROJECTS  HELP  DONATE  CONTACT  JOBS  VOLUNTEER  PEOPLE
 Search Metadata
 Search text contents
 Search TV news captions
 Search radio transcripts
Search archived websites
Digitized by the Internet Archive in 2006 with funding from IVIicrosoft Corporation
In the art of cooking the "Old Southern Mammy" has few equals and recogonizes no peers.
The following recipes have, with great patience and kindly perseverance, been drawn from the treasured mem- ories of Aunt Caroline Pickett, a famous old Virginia cook, the *'pinch of this" and "just a smacker of that" so wonder- fully and mysteriously combined by the culinary masters of the Southland have been carefully and scientifically and recorded in this volume, and after a practical test of each recipe herein presented, the author can, with the fullest de- griee of confidence, recommend the following as the most at- tractive and economical combination ever presented.
The variety covers a range sufficient to fully gratify the demands of the modest as well as the exacting tastes of the most pronounced epicure, and have been carefully classified and alphabetically arranged for the convenience of the house- wife, and a page has been left blank opposite each page of recipes for her own favorite dishes. It is the author's in- tention that this little book become a veritable treasure trove of dainty, appetizing and tasty dishes.
In sweet memories of a happy childhood spent in the
atmosphere of the plantations and cabins of Virginia under the benign influence of my Dear Old Southern Mammy, Aunt Caroline, this volume is affectionately dedicated.
Work lard lightly into the flour and salt, mix with iced water and then beat dough with rolling pin until it blisters.
Cut into biscuits and bake in quick oven.
One-half teaspoonful of soda.
Enough buttermilk to make soft dough. Mix flour, salt, soda and baking powder together. Add sweet potatoes and work the lard in lightly. Mix with milk to make soft dough, roll thin cut into biscuits and bake in quick oven.
Add enough milk or water to make a thin batter, and bake.
Mix in the order given and cook in baking dish in moderate oven.
Cut stale bread into thin slices, remove crusts, and cut in halves; toast evenly, and spread first with butter, then with honey, and dust with cinnamon. Serve very hot.
Add meal to boiling salted water by sifting it slowly through the fingers, while stirring rapidly with the other hand. Boil for ten minutes, and cook over hot v^ater for two hours. Serve hot as a cereal. Or pour into one-pound baking powder boxes to cool; fry in deep fat. Serve either for breakfast, or as an accompaniment to roast pork, or, with syrup, for dessert.
Chop the corn, and add other ing-redients in order given.
Drop from a tablespoon into hot, deep fat and fry until brown.
Mix egg, salt, sugar, and liquid in a shallow dish; soak bread in mixture, and cook on a hot greased griddle until brown, turning when half cooked: Serve plain or spread with jam.
Put the salt into the flour and soda into the molasses.
Stir all together and mix with milk or water. Drop into
Muffin tins and bake twenty minutes.
Mix in order given, beat well, and bake in a well-greased shallow pan in a hot oven about twenty minutes. Half of the egg will make a very good corn bread. Left-over pieces may be split, lightly buttered, and browned in the oven.
Stir the flour and meal together, adding cream of tartar,
soda, salt and sugar. Beat the egg, add the milk to it, and
stir into the other ingredients. Bake in a gem-pan twenty-minutes.
Put yeast mixed in. the order given in a bucket to rise.
Let it rise for about forty-five minutes or longer. Then when risen, put it into the flour, which has been mixed with the salt and lard. Do not knead the flour, just stick it together and beat it for fifteen minutes with rolling pin. If yeast does not make dough soft enough a little warm water may be used. After beating the dough, put it into a vessel to rise in warm place for about three hours. When risen, roll it lightly until about one-fourth of an inch thick. Then cut with biscuit cutter and dip into hot grease. Lastly fold the biscuits over and put into pans to rise about an hour or more.
Graham rolls are made the same way.
Toast as many slices of bread as desired. For twelve slices use three hard boiled eggs and about two cups of cream sauce.
Mash the whites of the eggs fine and stir them into the cream sauce. Spread each piece of bread when toasted with cream sauce, and then grate yolks over the top. Return to oven and heat just before serving.
Mix flour, baking powder and salt. Then work in lightly  the lard and mix with sufficient milk to make soft dough.
Roll thin, cut into biscuits with small biscuit cutter and bake in quick ovien.
To beaten yolks add milk, flour, baking powder, salt and butter. Add stiffly beaten whites last.
Beat eggs together, add milk, and salt and pour this on
the flour. Mix well and bake about forty minutes in rather
slow oven. Serve at once.
Put milk on stove in double boiler with butter, salt, lard and sugar. When milk becomes scalded, let it cool until blood heat. Dissolve yeast and stir it into the scalded milk.
Then add to milk when cooled two and a half cups of flour and mix to a stiff batter. Next add an i^gg well beaten to the batter and put the batter in a warm pice to rise. Let it rise bout five hours and then knead as for ordinary bis- cuit using three and a half ci^ps of flour. Knead until dough can be handled easily, then roll out to one-half inch thick- ness. Rub each biscuit with melted butter, put two biscuits together and place in pans far enough apart not to touch.
Bake fifteen or twenty minutes in hot oven.
Beat eggs separately. To yolks, add salt, melted lard, milk, flour, and baking powder. Lastly, put in the well beaten whites and bake twenty or twenty-five minutes.
Beat eggs well together, add milk, meal, salt, soda and baking powder and lastly the hot melted lard. Bake in mod- erate oven. One cup of fresh corn cooked until tender may be added to the batter.
Mix flour and salt, work lard lightly into the flour and mix with iced water to make stiff dough. Do not knead dough at all, just mix lightly together.
Scald milk and pour over bread crumbs. Beat two eggs well together, then add salt, milk and bread crumbs, flour and lastly the melted lard or butter.
Beat the eggs separately. Then mix and add yeast and sugar. Sift salt into flour, melt butter and lard and add eggs, yeast and milk before putting in flour. Leave in bowl and set away to rise. When risen, beat hard and put into greased pan to rise again. For seven o'clock tea make it at twelve.
Mix and sift dry ingredients; rub in shortening with finger tips, add milk and mix thoroughly; roll lightly, on a floured board to a thickness of one-half inch ; cut with biscuit cutter, brush with milk or water, and fold double. Bake in hot oven fifteen minutes.
Put the meals and flour together. Stir soda into molasses until it foams. Add salt and milk or water. Mix all together. Bake in a tin pail with cover on for two and a half hours.
Pour one pint of boiling sweet milk over three heaping tablcspoonsful of corn meal. Beat well and set in a warm place all night. On the morning add to the mixture a pint of warm milk or water, a teaspoonful of sugar, a pint of flour.
Beat well and set in a warm place for aobut two hours or until it looks spongy. Then add one teaspoonful of salt, one tablespoonful of lard and enough flour to make a soft dough.
Work fifteen minutes, knead into loaves, let them rise one or two hours, and then bake an hour or longer.
Beat the yolk of one ^gg, add a teaspoonful of sugar, and a small pinch of salt, then p6ur in slowly stirring all the while a cup of milk. Pour in a glass and put spoonful of whipped cream on top and any quantity of "flavoring desired."
Make syrup by boiling sugar and water together for ten minutes. Add the tea, fruit juices, pineapple, and strawberry syrup. Let stand thirty minutes, strain and add enough iced water to make one or one and one-half gallons of liquid.
Turn into large punch bowl over a piece of ice and lastly add cherries. This quantity will serve about ten people.
Melt the chocolate over hot water. Add the sugar, salt and boiling water. When smooth, add the heated milk and cook twenty minutes in double boiler. Then beat with tgg
beater and flavor. More sugar may be added if desired.
An excellent substitute for whipped cream to serve with hot chocolate is marshmallows. Drop one in each cup of the hot liquid.
Take one-half teaspoonful of tea to one cup of boiling water. Put the tea in the pot, pour the boiling water upon it and let stand where it will keep hot for five minutes. Then serve. Tea should never be boiled for it makes it bitter.
Use one scant teaspoonful of tea to one cup of boiling
water. Pour boiling water over tea leaves and let stand until
milk warm. Then strain and sweeten to taste while tea is
still warm, as it requires less sugar. Serve with crushed ice,
green mint leaves, and sliced lemon and orange.
Boil sugar and water ten minutes, and cool ; add strained lemon juice, mint leaves bruised, and ginger ale; half fill glasses with crushed ice, and julep, and garnish with a sprig of mint.
Over three quarts of dewberries pour one pint of vinegar and let it stand twenty-four hours. Strain and add one pound of sugar to one pint of juice. Scald twenty minutes and bottle tight. Strawberry and raspberry vinegar may be made in the same way.
Cream butter and sugar and add to well beaten eggs, next add milk, melted chocolate, flour beaten in lightly, vanilla and spices, and lastly the boiling water and soda. Bake in layer tins and moderate oven.(For Devil's Food Cake)
Put all the ingredients except vanilla on to cook. Cook until thick, then beat until creamy, add vanilla and spread on layers.
Cream one cup of butter and two cups of powdered sugar.
Add stiffly beaten whites of six eggs, three cups of flour, in
which has been sifted two teaspoonsful of baking powder, and
Put on two cups of white sugar with enough water to dissolve thoroughly and cook until it spins a thread. Then add one teaspoonful of vanilla and pour slowly over the whites of two eggs beaten stiff. Beat until creamy and then spread on cake layers. Thickly strew the top of icing with raisins,
English walnuts and blanched almonds.
Sift flour and sugar together five times, then add cream of tartar. Have whites well beaten and add sugar and flour slowly, then almond extract. Beat very little after flour goes in and bake in round cake pan in moderate oven for about fifty minutes.
Put on to cook two and one-fourth cups of brown sugar,
Cook until thick, then beat until creamy and spread on layers.
Bake in layers in moderate oven.
Mix in the order given and cook in biscuit pan in moderate oven.
Sift flour three times after adding to it a teaspoonful of soda, and two of cream of tartar. Cream butter and sugar un- til very light and add to the stiffly beaten whites. Next add the flour, beating it in lightly with the hand. Flavor with one teaspoonful of vanilla or almond extract and bake in slow oven.
Cream butter and sugar and add to well beaten yolks.
Next add alternately the flour and the whites beaten stilt, then the fruits, which have been cut fine and dredged with flour, and lastly the nuts. Bake in a slow oven.
Cream butter and sugar and add to well beaten yolks.
Next add flour and whites beaten stiff, the fruit, nuts, brandy, wine and spices. Bake in slow oven from four to five hours.
To whites of eight eggs beaten stiff, add one cup of butter and two cups of sugar creamed together. Next add three-fourths cup of milk, three cups of flour, two teaspoonsful of baking powder and one teaspoonful of vanilla. Bake in layiers in moderate oven.
Put on to cook two cups of sugar and half a cup of water.
Boil without stirring until it jellies when dropped into cold water. Then pour over stiffly beaten whites of three eggs, then stir into icing a small quantity of citron, currants, dates, figs, raisins, almonds, English walnuts (all chopped fine) and grated cocoanut, leaving out a similar quantity to be put on top of cake when iced.
Separate eggs leaving out two whites for filling. To beaten yolks, add butter and sugar creamed together, then the milk, flour, baking powder and vanilla and lastly whites of two eggs beaten stiff. Bake in layers in moderate oven, and put together with any kind of filling desired.
Cream crisco and sugar and add to stiffly beaten whites, then add the milk. Next beat the flour in lightly, and add baking powder and vanilla .Bake in layer cake tins in a moderate oven.
Put sugar and water on to cook. Let it cook until it spins a thread, then gradually pour it over the yellows, which have been beaten until thick. Beat until filling becomes creamy, add one teaspoonful of vanilla, and spread on layers.
Whites of three eggs beaten stiff. Add three tablespoons- ful of sugar slowly. Put on top of butterthins and sprinkle over with ground nuts and brown in oven.
Sift one quart of flour, make a hole in the center, put in two cups of sugar, one of lard, one beaten legg, and one cup of sweet milk, into which has been stirred a half teaspoonful of soda. Work all together, roll thin and bake in a quick oven.
Cream butter and about two-thirds of the flour together.
Beat whites of eggs to a stiff froth, beat yolks of eggs and sugar together until very light. Mix thoroughly all the in- gredients, stirring in last the loose flour. Bake in a slow oven until done.
Boil sugar and water until it spins a thread. Cut up marshmallows and pour boiling water over them to steam.
When sugar is done, pour gradually over the whites of two eggs beaten stiff, then add marshmallows; beat until creamy and spread on cake layers.
Cream butter and sugar and add to well beaten eggs.
Next add the milk, flour, baking powder, raisins and spices.
Bake in layers in moderate oven.
When this begins to boil, add one tablespoonful of corn- starch dissolved in a little cold water. Cook until it spins a thread, then beat until creamy and spread between layers.
Put the butter into an agate dish on the stove; when melted, stir in the cocoa and sugar dry; add boiling water and stir until smooth. Add vanilla to taste.
Mix in the order given adding the dry ingredients sifted together and enough more flour to make a dough just soft enough to handle. Have the board well-floured, and the fat for frying, heating. Roll out only a little at \ time, cut into rings with an open cutter. Do all the cutting before frying, as that will take your entire attention. The fat should be hot enough for the dough to rise to the top instantly.
Cream the butter and sugar together and add the well- beaten eggs. Add the remainder of the ingredients and drop on a well greased baking-pan. Bake in a moderate oven, from fifteen to twenty minutes.
Teaspoonful of extract of Lemon.
Beat together eggs and sugar, add salt and extract. Stir
Into the dry flour the soda and cream of tartar. Mix all to- gether. Bake in a moderate oven, in a large pan, and turn out, when done, on a clean towiel, which has been sprinkled with powdered sugar. Spread with jelly and roll while warm.
One-cup each of raisins, currants, and English walnuts or almonds broken up.
To well beaten eggs add creamed butter and sugar, cin- nam.on, soda, water, flour, fruits, which must be dredged with flour, and nuts. Lastly add one teaspoonful of vanilla and drop by spoonful into greased pans. Bake in moderate oven.
Put butter, powder and sugar into flour, add ginger and molasses. Add more flour if needed. Roll out thin and bake in a quick oven.
Mix in order given and bake in moderate ovea,
Cream butter and sugar and add to well beaten yolks.
Then add alternately the flour and whites of the eggs beaten stiff; then the wine and brandy spices. Lastly add the fruit which has been chopped fine and dredged with flour, mix wiell together and bake about four hours in a slow oven.
Put sugar, milk and butter on to cook. Let it cook until it will form a soft ball when tried in cold water. Add vanilla, remove from stove, and beat in the cocoanut until it becomes creamy. Pour into buttered plates and cut into squares when cold.
Put sugar and butter and milk on to cook. Cook until it will form a soft ball when tried in cold water. Add vanilla, remove from stove and beat until cneamy. Then put in nuts and drop from spoon on buttered papers.
Cook about twenty minutes, beat until creamy, and pour into buttered plates. When cold cut into squares.
Put sugar, syrup and water on to cook. Let it cook until it will form a hard ball when tried in cold water. Remove from stove and pour gradually over stiffly beaten whites.
Add vanilla and one cup of nuts and beat until creamy. Pour into buttered plates and cut into squares when cold.
Shell and blanch burnt almonds and lay them in the open oven to dry, but do not let them brown. Put one cup of granulated sugar over the fire with a tablespoon of water; stir until it is well dissolved and comes to a boil . Drop into this the blanched almonds a few at the time and take them out immediately with a perforated spoon or candy dipper, lay- ing them on waxed paper until they harden, or upon but- tered plates.
Mix in a saucepan two cups of brown sugar, half a cup each of molasses (not sirup) and cream, half a cake of un- sweetened chocolate, and four tablespoons of butter, bring to a boil slowly, taking care the sugar does not scorch before it is entirely melted, cook steadily until a little of the candy is brittle if dropped in cold water, add two teaspoons van- illa, turn into a greased pan, and cut into squares as soon as it is cool.
Put a pint of New Orleans molasses over the fire in a saucepan and boil for twenty minutes. Stir in a quarter tea-spoon of baking soda and boil fifteen minutes longer, or until a little, dropped into cold water, becomes brittle. This candy must be stirred contsantly while it is cooking or it will scorch. When it reaches the brittle stage, add a teaspoon of vinegar and a tablespoon of butter and pour into well-buttered pans. Mark into shape with a buttered knife after the candy begins to form and before it is really hard.
Put a half cup of cold water and two cups of granulated sugar into a clean saucepan and boil slowly, without stirring, until it spins thread from the tip of a spoon dipped into it.
Take from the stove, leave it untouched until it is about blood- warm, then stir steadily, always in one direction until the mixture begins to become creamy. Flavor to taste with essence of peppermint, adding this cautiously so as not to get the flavor too strong. Drop by the teaspoonful upon waxed paper, being careful not to put the drops so close together that they will run into each other. A candy dipper is even better for this purpose than a teaspoon.
Put sugar and molasses into a smooth, clean saucepan, and add boiling water, heat gradually to the boiling point, and boil to 258 degrees F., or until candy becomes brittle when tested in cold water, add flavoring, pour on an oiled slab or platter and when cool enough to handle pull until nearly white; pull into long strips about half an inch in diameter, and cut in small pieces with scissors; roll in powdered sugar, and keep in a covered jar for several days before  using.
Put sugar, peanut butter and milk on to cook. Let it cook until it will form a soft ball when tried in cold water.
Add vanilla, remove from stove and beat until creamy. Pour into buttered plates and cut into squares when cold.
Put sugar and water on to cook. When it begins to boil, add butter, and let it cook until it will form a soft ball when tried in cold water. Add vanilla, remove from stove, and beat in the chocolate. Bet until creamy, then pour into buttered plates. Cut into squares when cold.
Put sugar and water on to cook. Let it cook until it spins a thread. Then add vanilla, remove from stove, and pour slowly into whites of eggs beaten stiff. Beat until stiff and then drop from spoon on buttered paper. Add nuts just be- fore candy gets creamy and hard.
Meats
Grind or chop the veal, salt, and stir into the rice with the dressing; beat the eggs, add milk, and stir all together.
Drop a tablespoonful spread out thin on the griddle, and fry as you would griddle-cakes. Pork,or lamb may be used in- stead of veal.
Put ham, including the fat, through meat chopper; add crumbs, water, eggs, and seasoning; mix well, and bake in a small bread pan, in a slow oven, an hour and a half; or cook in steamer two hours.
Wash rice, place in greased baking dish ; and liquid, ham, vegetables, and salt if necessary. Bake slowly for three hours ; stirring occasionally during the first hour. Ham stock or corned beef stock may be used, and any cooked meat sub- stituted for ham. Serve with boiled spinach or dressed lettuce.
Slice one-half pound of cheese in thin slices, cover with water and cook on top of the stove until cheese has thoroughly melted. Then remove from the stove and when cool add to it two eggs well beaten, one table spoon of flour, one-half tea spoon of salt, pinch of red pepper and one-fourth tea- spoon of baking powder. Put in greased baking dish, cover top with bits of butter and bake in moderate oven.
To four eggs beaten separately add three tablespoonfuls of milk, a small quantity of butter and a pinch of salt. Pour quickly into a hot greased pan. Let remain on stove two minutes, then place inside oven for three minutes. Take out and fold twice ; serve immediately.
Moisten with cold coffee or strong tea. Cook slowly two hours.
Salt to taste.
Put the fish into a piece of cheese-cloth, let cold water run over it, and squeeze dry. Mix ingredinets all together.
Take a little flour in the hand and roll half a tablespoonful of the mixture between the palms, to the size of a small peach.
Fry in deep fat.
Cut liver into half-inch cubes, and soak in cold salted water fifteen minutes; drain; cover with the boiling water, and simmer six minutes ; cook bacon fat, onion and flour until brown ; add seasonings, and stock in which liver was cooked ; stir until smooth ; add liver, and pour over toast or small, thin baking powder biscuit.
Beat the tgg and milk together, adding the salt. Dip the chops into this mixture, then into the crumbs. Fry in hot fat. Veal cutlets can be served in the same way.
Mix and season to taste with salt and pepper. Beat into the mixture one raw tgg. Add three or four grated crackers and brown in hot lard.
Cook oysters in their own liqour until plump; drain and measure the liquor; melt butter, add flour, and blend well; add oyster liquor, and enough milk to make two cups; stir until smooth, add seasonings and oysters, and serve on toast.
Garnish with toast points and sliced pickles.
Wash the shells and fill them lightly, put grated bread crumbs over the top and pour over each two tablespoonsful of m«elted butter. Place in pan and bake until light brown.
Melt butter in sauce pan ; stir in flour, add chicken stock, season and bring to boiling point. Add chicken and cook slowly for five minutes. Fill patty shells and serve at once.
Clean, rinse and wipe dry a white fish or any fish weighing three or four pounds. Rub the fish inside and out with salt and pepper, fill with a stuffing like that for poultry, but drier; put in a hot greased pan, dredge with flour and cover the top with bits of butter. Bake an hour and a half.
Sprinkle the bottom of a skillet generously with salt.
Place on the fire and let it become quite hot. Then put in the steak, turning often so as to retain the juice. When done place on a heated platter and season with pepper and bits of butter.
Cut hard boiled eggs in two the long way; remove the yolks and mash very fine. Add vinegar, sugar, salt, pepper and mustard to taste, also a little butter, mix well, put back into the whites and serve on lettuce leaves or garnished with parsley. For a change, ground olives, chicken or boiled ham may be used with the yolks. ^
Melt shortening, add flour; add hot milk, and stir until smooth and thick ; add seasonings and cheese, and pour into a shallow dish to cool. Shape into small pyramids, roll in sifted crumbs, dip in €^gg, and again in crumbs, and fry in deep fat until brown. Serve immediately
Arrange two cups of cooked macaroni and one pint of small oysters in layers in a buttered baking dish ; season each layer with salt and pepper, and dredge with flour ; cover with buttered crumbs and bake in a hot oven twenty minutes
One-fourth cup of grated cheese may be added.
Cut beef in small pieces, cover with boiling water, let stand five minutes and drain; melt butter, add beef and stir until hot; add flour and milk and stir until smooth; add cheese and ketchup, and stir until cheese is melted. Serve with baked potatoes.
Mix flour, cheese, salt, butter, pepper and baking powder. Mix with iced water to make stiflP dough. Cut in long slender strips. Place in greased pans and bake in quick oven.
Boil a chicken until tender and when cool cut in dice.
To diced chicken add strips of pimentos and green peppers and a can of mushrooms. Season with salt and pepper and mix with cream sauce. Serve hot on buttered squares of toast.
Put vegetables through the meat chopper, using coarse cutter; cook in the stock, covered, until tender; add beef, salt, and pepper, and when hot turn on a platter and garnish with toast points. If corned beef and stock are used, use salt with care.
Mix well together three pounds of finely chopped veal, with one-half pound pork . Add to this one-half cup of grated bread crumbs, two beaten eggs, a little onion, salt and pepper to taste. Roll into a loaf and pour the juice of a can of tomatoes over the loaf and two tablespoonsful of butter, cook in oven for one hour and half.
Boil chicken until tender, then chop very fine. Season with a little parsley chopped fine, salt and red and black pep- per to taste. Mix with cream sauce and shape into croquettes.
Roll croquettes in beaten ^^g, then in bread crumbs and fry in deep hot fat
Put two cups of milk on stove to scald. Into two table- spoonsfuls of melted butter rub two tablespoonsful of flour until smooth. Then add scalded milk a little at the time to prevent lumping and season with salt and pepper. Stir con- stantly until thick, then remove from the stove.
Dress and cut up one chicken as for frying-. Boil until very tender,then add two cups of rice, half a cup of butter, some salt and plenty of pepper. Cook until it can be eaten with a fork.
Pickles, Relishes
Chop fine oriie-half gallon of green tomatoes, one pint of onions, one pint of green and red peppers with seeds taken out, and one gallon of cabbage. Mix well and sprinkle two tablespoonsful of salt over it and let stand all night. Add three quarts of vinegar, two pounds of sugar, three teaspoons- ful of celery seed, three of mustard seed two of spice, and one of cloves. Let simmer two hours.
Chop one head of cabbage, one gallon of green tomatoes, and one quart of onions. Add one-half cup of salt, put in a bag and let it drain for twenty-four hours.
Then put in kettle and add about two pounds of brown sugar, one cup of white mustard seed, and one-half cup of celery seed. Cover with good apple vinegar and cook until done, about three or four hours. To the above add one or two pods of chopped red pepper.
Cut rinds and soak over night in water to which has been added one cup of lime to a gallon of water. Rinse in four full waters and boil until tender in tea made of one- half gallon of water and four tablespoonsful of ginger. Then cook in the following syrup:
Chop the raisins and put them into a porcelain lined kettle, add the apples, chopped and unpeeled, the juice and the chopped peel of the oranges, the sugar, vinegar and spices.
Boil steadily for half an houi.
Cut the corn from the cob, chop, onion, peppers and cab- bage, add sugar, salt and vinegar, and cook slowly three- quarters of an hour. Ten minutes before taking from the fire, add a very scant fourth of a pound of dissolved mustard.
Seal in glass jars.
Cut the peppers and onions into small pieces, sprinkle with salt and cover with boiling water. Let stand until cool, then drain, place in a kettle, and add the vinegar, and sugar.
Cook for twenty minutes. Put into jars, seal and set away
until needed. Serve with cold meats.
Soak tomatoes, onions and cabbage in salt water one- half hour, wash and drain, add other ingredients and boil twenty minutes.
Take enough cucumbers to fill a two-gallon jar. Cut into lengthwise pieces and soak until fresh. Cover with equal parts of water and vinegar, and boil an hour and ten minutes.
Then take them out and boil one and one-half hours in one gallon of fresh vinegar, two pounds of sugar, one tablespooniul of oelery seed, one tablespoonful of tumeric, one teaspoonful each of cloves, mace and ginger, one tablespoonful of black pepper, and one of horse radish. When cold add one-half teaspoonful of cayenne pepper.
Grind in coarse meat chopper, cover with one cup of salt and let stand over night. Next morning squeeze and put on to cook with sugar, vinegar and spices. Cook about half an hour or longer.
Wash as many fresh green peppers as desired. Then re- move the tops from the peppers, scoop out the seeds, and fill with grated ham mixed with cream sauce. Cover with bread crumbs and bits of butter and bake until ready in a hot oven.
J*.
Peel peaches and put in stone jar. To seven pounds of fruit, use three and one-half pounds of sugar and one quart of vinegar. Boil sugar and vinegar together awhile and pour over fruit and flavoring, cinnamon, spioe, ginger, cloves, nut- meg and mace may be used, put in little sacks. Do this for seven or eight mornings.
Peel tomatoes and onions, chop very fine, add chopped peppers, and the other ingredients and boil one and one-half hours.
Chop peppers, onions and cabbage fine and soak in one and a half cups of salt all night. Then cover well with vinegar and put equal parts of sugar. Add seasoning and cook about two and one-half hours.
Chop all fine and let stand over night, sprinkling them with salt. Do not put cabbage with onions and tomatoes.
Next morning squeeze out the cabbage, onions and tomatoes, and put on in kettle. Add three quarts of vinegar, four pounds of brown sugar, one package of seedless raisins, one-half ounce of ground red pepper, eight tablespoonsful of white mustard seed, four tablespoonsful each of celery seed, one tablespoonful each of allspice, ginger, cloves and tumeric.
Mix well together and cook about one hour.
Cream butter and sugar and add to the well beaten yolks.
Then add milk and one teaspoonful of vanilla. Mix well and bake on a nice crust. When done, spread with the whites and three tablespoonful of sugar and a little flavoring. Re- turn to oven and brown.
Sweeten, flavor and whip stiff one pint of cream. Add to cream one-half pound of marshmallows cut into small pieces. Set on ice to chill. Then add one-half pound of blanched almonds chopped fine and garnish with marschino cherries. Line bowl in which cream is put after being whip- ped, with powdered lady fingers or macaroons.
Beat whites of three eggs stiff and aai one heaping tea- spoonful of baking powder and the above ingredients. Cut the dates and almonds into small pieces. Put mixture in a pudding pan set inside of a pan of water and bake in oven one hour. Cover while cooking. Serve with cream.
Beat the yolks very light and beat into them the sugar. Add this to the hot milk and cook until the custard begins to get thick. Take from the fire. Add gelatine, which has been softened in one-fourth cupful of cold milk. Add vanilla and sherry wine and let cool. Beat the whites of eggs stiff, and fold into them the whipped cream. When custard begins to set, fold into it the cream and whites of eggs and put into a mold. Mold with alternate layers of broken macaroons and crystallized cherries.
Swieeten the cream and when the sugar has dissolved, stir in the wine carefully. Add the vanilla and beat to a stiff froth. Serve in glasses.
Add a tablespoonful of sugar to each ^gg, beat well, leaving out the whites. To the yolks and sugar add one cup of sherry wine and cook to a thick custard in double boiler. To the custard while hot add one talbespoonful of gelatine dissolved in one-half cup of water, then whip in lightly the beaten whites. Roll out macaroons or Social Teas into dust. Into a bowl begin to lay cracker dust, pineapple, nuts and cherries. When you have used half the ingredients, pour over it the other half of the fruits and custard, sprink- ling the top with cracker dust. Put into refrigerator to con- geal. Serve with whipped cream (no sugar or flavoring in cream).
Remove the skin, and cut into small pieces enough rhubarb to fill a pint bowl. Add the soda, and pour over it boiling water to cover. Let stand fifteen minutes and pour off the water. Line a deep plate with a rich crust. Put in the rhubarb, sugar and flour, cover with crust. Bake twenty minutes or half an hour.
Stir one-half pound of butter into a pint of warm water, set it on the fire in a sauce pan and bring it to a boil, stirring often. When it boils put in three fourths of a pound of flour and let boil one minute, stirring constantly. Take from the fire and turn into a deep dish to cool. Beat eight eggs light, and whip into this cool paste, first the yolks, then the whites. Drop in great spoonsful on buttered paper so as not to touch or run into each other, and bake ten minutes. Split them and fill with the following cream:
Stir while boiling and when thick, add a teaspoonful of butter. When cold, flavor.
Pare and slice apples thin. Put alternate layers of apples and bread crumbs sprinkled with cinnamon, bits of butter, and brown sugar in buttered baking dish. Then add one cup of water and bake until apples are thoroughly done and brown on top.
Pare and slice apples, add one-quarter cup of water; cook until soft, and rub through a sieve ; add other ingredients in order given. Line a deep plate or patty tins with rich paste, fill, and bake about forty minutes. Cake crumby may be substituted for macaroons.
Line a pie plate with nice pastry. For one custard allow one e^gg well beaten, one cup of brown sugar, four teaspoonsful of milk, one tablespoonful of flour or starch and a piece of butter the size of an ^gg. Pour this in the crust and bake.
After baking make a meringue and bake a delicate brown.
Put all together on to cook and cook until thick and a pretty red color.
To well beaten yolks add sugar, flour, milk, butter, baking powder, juice and grated rind of three lemons. Cook in double boiler until thick and then bake on a nice crust.
After baking, make a meringue of the whites and bake a delicate brown.
Beat ^^g and sugar together, then add milk and salt.
Sift the baking-powder into the dry flour, and put all the ingredients together. Add the nuts last, covering with a little flour, to prevent falling, and bake in a moderate oven one hour.
Put two squares of unsweetened chocolate in double boiler, add two cupsful of cold milk, and bring to the scalding point.
Mix thoroughly one-fourth of a cupful of sugar, three tablespoonsful of cornstarch, one-fourth of a teaspoonful of salt and pour on one-fourth of a cupful of milk gradually, while stirring constantly. Add to milk which was scalded with chocolate, and cook fifteen minutes, stirring constantly until mixture thickens and afterward occasionally.
Add one-half of a teaspoonful of vanilla and turn into a serv- ing dish. Chill and serve.
Pour hot water on the stale bread and let soak until soft. Then add other ingredients and bake for three hours in a moderate oven. If eaten cold, serve with hot sauce.
If eaten hot, serve with cold sauce.
Add lemon juice and grated rind to the raisins. Then add one cup of sugar and two tablespoonsful of water. Bake between upper and lower crusts.
Creamed together . Add one-half cup of cream or milk and five tablespoonsful of wine. Stir constantly while cook- ing until dissolved and creamy. Flavor to taste with vanilla or nutmeg.
Mix in the order given and bake in slow oven.
Crumble three lady fingers into a baking dish, cover with a thin layer of cranberry preserves or jelly. Dot with small lumps of butter and add a sprinkle of cinnamon. Beat three  eggs separately very light and add two cups of milk.
Pour over the fruit and cake. Bake as a custard and serve with whipped cream.
Mix well the yolks of two eggs, one cup of molasses, one scant cup of sugar, one cup of buttermilk with pinch of soda and two tablespoonsful of flour. Flavor with cinnamon and  vanilla.
Cook in double boiler until thick, then bake on a rich pie crust Use the whites for meringue. no
Put on four cups of sugar and four cups of water with six cloves and bring to boiling point.
Peel and core apples and drop them into boiling syrup.
Cover kettle and let apples steam slowly until they are clear and tender. Pour last of syrup over fruit and serve.
Grate three medium sized potatoes. Beat together one cup of sugar, three eggs, one tablespoonful of butter, one pint of milk, and add to the grated potato.
Pour in a buttered pan, drop bits of butter on top and bake one hour in a moderate oven. Flavor with one tea- spoonful of vanilla.
Beat the egg, add sugar, salt, lemon juice and grated rind. Roll cracker fine, chop raisins and mix all together.
Roll the crust thin, cut into rounds. Put a spoonful of filling between two rounds and pinch the edges together. Prick top crust with fork. Bake in iron pan for twenty minutes.
Mix in order giyen, sifting dry materials together be- fore adding. Turn into a greased bread pan, let stand fifteen minutes, and bake in a moderate oven one hour.
Take rich pie crust, roll thin as for pie and cut into rounds as large as a tea plate. Pare and slice fine, one small apple for each dumpling. Lay the apple on the crust, sprinkle on tiny bit of sugar and nutmeg, turn edges of crust over the apple and press together. Bake in a hot oven for twenty minutes. Serve hot with cold sauce.
Then add gradually scalded milk, put back on stove and cook until thick, stirring constantly to prevent lumping. When cool, add any flavoring desired.
Sift one quart of flour and into the flour put one pound of raisins, one pound of currants, one-half teaspoonful of salt, one pound of sugar, one grated nutmeg, one teaspoonful of ground spice. Beat four eggs and add after mixing the fruit well in the flour, and mix with enough water to make a stiff batter as for fruit cake. Boil or bake and serve with sauce. Cook for about two hours.
Force potatoes through a ricer; beat the eggs and mix with potatoes ; add other ingredients, pour into buttered baking dish or cups, and bake in a slow oven until firm.
Cook in double boiler until thick. When cool, add one teaspoonful of vanilla. Bake on a nice crust. When cool, cover pie with thin slices of banana, then the meringue, and bake a delicate brown.
Make regular pie crust and roll it into two sheets, each about one-half inch thick. Bake in well-greased pan, laying one sheet on top of the other. When done and while warm separate them. When cold put between the crusts a thick layer of strawberries well sprinkled with powdered sugar.
Arrange largest berries on top. Cut in wedge-shaped pieces and serve with sweetened whipped cream.
Cover the top with the whites of the eggs beaten stiff and sweetened.
Let cool. Flavor cream to taste, then beat in the milk and gelatine. If desired, fruits, nuts, and maraschino cherries may be added.
Whip stiff the white of one \tgg and add alternately and gradually three tabelspoonsful of sugar and a cup of cranberry sauce. Continue to whip until it has reached at least a pint and a half in quantity, for it swells surprisingly. Finely chopped nuts may be added if desired.
Beat yolks together with butter, sugar, milk and flour.
Cook in double boiler until thick, then bake on a nice crust.
Use whites for meringue.
Pour the mixture into a deep pie-plate lined with crust, and bake in a slow oven one hour.
Mix together two tablespoonsful of flour, one teaspoonful of mustard, one teaspoonful of salt, one tablespoonful of sugar. Add this to two eggs well beaten, and lastly one cup of vinegar. Put on to cook in a double boiler and cook until thick, stirring frequently.
Boil one large chicken until tender and when cold cut in dice. To diced chicken add four hard boiled eggs mashed fine, one and a half bunches of celery chopped fine and salt and pepper to taste. Mix well with oil dressing and the juice of one lemon.
Five medium sized, cold, boiled Irish potatoes, diced ; three hard boiled eggs and a few pieces of parsley chopped fine, and one cup of diced celery. Season with salt, black and red pepper and mix well with oil dressing.
Beat yolks until thick; then add salt, pepper, mustard and part of lemon juice. Lastly add the oil one drop at a time at first, then slowly until dressing is thick, and then the remainder of th.e lemon juice.
Cover one-half box of gelatine with one and one-half cups of cold water. Stew one quart can of tomatoes until tender and strain.
Season with salt, pepper and sugar to taste and bring to boiling point.
Pour hot tomato juice into the melted gelatine and add to this one hard boiled ^gg sliced thin.
Put the ingredients in a pint preserve jar; fasten the cover, chill and shake well before using. Keep in the ice-box and use as needed.
For use with fruit salad, omit mustard, Curry, Brand's Al sauce, Worchestershire sauce, tomato ketchup, or similar condiments may be added in small amounts to vary the flavor.
Marinate shrimp in French dressing; drain, add celery, olives and pimento. Mix w^ith Mayonnaise and fill tomato cases, putting a teaspoon Mayonnaise on each. Serve on leaf of head lettuce.
For each person allow two lettuce leaves, one slice of pineapple and three dates stuffed with cream cheese.
Cut the pineapple in cubes and place on the lettuce; cut dates in halves lengthwise, remove stones, stuff with cream cheese and arrange on pineapple; sprinkle cheese with paprika and dress all with French Dressing.
Arrange the pieces in circular form on the lettuce.
Form the center of each Lily by putting in the yolks, well mixed with mayonnaise.
Cut into small pieces marshmallows, white grapes, sliced
pineapple, almonds or pecans and a little banana, sliced thin.
Serve on lettuce with oil dressing and maraschino cherries
to garnish it.
Whip the cream, sweeten and flavor to taste. Mix the cream and the dressing. Put in the fruit, but do not use the juice of the fruit. Pack the mixture in coffee or baking powder cans and let them remain in the ice four or five hours.
A small tub can be used to set the cans in and pack ice and salt around them.
Boil one chicken and one rabbit or squirrel in two or three quarts of water. When about half done add one quart of lima beans, one quart of tomatoes, one quart of corn and  butter the size of two eggs.
Season to taste with salt and pepper and cook until thick enough to eat with a fork.
Pick over and wash two-thirds of a cupful of white beans.
Put on the back of the stove in cold water.
Let these boil slowly, while the dinner is cooking.
When the boiled dinner has been taken up, put these beans into the liquor in which the dinner was cooked.
Boil one hour.
Wet threetablespoonsful of flour with water, and stir in while boiling, to thicken. Serve hot, adding a little milk, if you like.
tablespoonsful of flour dissolved in a little milk. Add salt and pepper to taste, then one cupful of cream and serve hot.
Put a quart of tomatoes in a kettle and boil for about twenty minutes or until juice is thick. Season with salt, pepper and sugar to taste, then add one-half teaspoonful of soda.
Strain and add to hot strained juice one pint of scalded milk.
Boil a few minutes and serve with oyster crackers or squares of toast.
Put tomatoes, onion, parsley, salt and pepper on to cook.
When cooling add flour and butter which have been creamed together.
Cook until thick.
Take four large potatoes, boil until done and mash smooth, adding butter and salt to taste. Heat the milk in a double boiler, cook the onion in it a few minutes and then remove.
Pour the milk slow^ly on the potato, strain, heat and serve immediately. Thicken with one tablespoonful of flour.
Put a quart of tomatoes in a kettle, add one cupful of water and boil for about ten minutes ; season with salt, pepper, and sugar to taste, then add one-half teasponful of soda.
When the tomatoes have boiled, strain them and add to the strained juice one pint of scalded milk.
Lastly add one cupful of cream in which a little flour has been blended.
Take tweny-five oysters, with their liquor and put these into an agate dish on the stove with salt to taste, in a pint of cold water.
Boil five minutes.
Stir into this one heaping teaspoonful of flour, which has been wet with two tablespoonsful of cold water. Add one quart of milk.
Let it come to a boil, but be sure not to have it boil.
Remove from the fire, and add a piece of butter the size of an egg. This is sufficient for eight people.
Rinse the peas with cold water, and reserve one-fourth cup; simmer the remainder with seasonings and hot water for twenty minutes, and press through a sieve; thicken the milk with butter and flour blended together, and add to peas.
Add the whole peas just before serving.
Cook stock, onion, and celery for fifteen minutes, and strain ; add hot milk and seasonings, and thicken with chicken fat and flour blended together. The amount of salt will depend upon the quantity in the stock. Celery salt may be used in place of celery tops.
Pour into baking dish and cook in hot oven. When cool, beat whites of eggs stiff, sweeten and flavor, spread on top of pudding and bake a delicate brown.
Pare the potaoes and cut into small pieces.
Put them on the stove, in an agate dish, salt and cover with milk.
Let them cook fifteen or twenty minutes, then thicken with one tablespoonful of flour, stirred with half a cupful of water put in the butter and serve hot.
To two cups of mashed sweet potatoes add one teaspoonful of cinnamon, on>e cup of sweet milk, one-half cup of sugar, one-half cup of seeded raisins and butter size of an egg.
Cook in buttered baking dish and when done, cool, spread the top with mashmallows and brown in oven.
Select large Irish pototaies and bake.
When done cut in half, take meat of potato from shell, mix with little salt, pepper and grated cheese.
Put back in shell, put butter on top and bake light brown.
Cut raw potatoes into small cubes and put into baking dish.
Add salt, pepper and pieces of butter.
Cover with sweet milk and cook in the oven.
Peel large ripe tomatoes and cut in quarters, place in the center of each tomato one tablespoonful of ground stufted olives, one teaspoonful of ground, hard boiled egg, one teaspoonful of English walnuts or pecans. Serve on lettuce with oil dressing and grated cheese sprinkled on top of dressing.
Peel as many fresh tomatoes as persons to serve.
Mako small round opening at the top by hollowing with a teaspoon.
Season highly with mayonnaise, catsup, mustard and enough crab flake to fill the tomatoes.
Set on ice and serve very cold for luncheon.
Put macaroni on to boil in water with a little salt.
When tender drain off water.
Put in a baking dish first a layer of macaroni, then cheese, crumbs and butter.
Pour milk over it and bake.
Beat together until smooth, and add two well beaten eggs and one cup of sweet milk.
Pour into a baking dish,bake quickly and serve immediately.
Wash 4 heads and take off the green leaves.
Cut into pieces 3 or 4 inches long, ut into a stew-pan with Yl pint of meat broth, stew till tender.
Add a little cream and seasoning; also a little flour and butter, and simmer together.
Take out from the top the inside of large tomatoes, with this mix bread crumbs, butter, pepper, salt, a little sugar and some chopped onions.
Fill the tomatoes with this, set them in a deep dish or plate and bake slowly for J^ hour.
/*-'
Boil 6 small sized sweet potatoes, peel them and lay on a shallow plate or pan. Put a teaspoon butter on each potato, sprinkle on them 3/2 cup of brown sugar, 2 tablespoons water in pan, cook slowly and baste as you would meat.
Cinnamon, cloves, nutmeg, and lemon peel improve the flavor.
Cut up 5 or 6 flat white turnips and chop fine in a chop-
ping-bowl. Put into boiling water and cook till tender.
Drain off the water, add sufficient seasoning and % cup good vinegar.
Let them simmer on the stove about ten minutes.
These are excellent.
Cut the corn off the cob, boil in a little water 15 or 20 minutes. When done, add a cup of milk or cream, a little butter, and season to taste.
Mash some mealy potatoes smooth, season, and add butter and cream till quite moist; make up into balls, dip in beaten eggs, roll in bread crumbs, and fry in butter to a nice brown.
Pare the potatoes, shave them very thin, soak for J^ hour in ice-cold salted water; drain in a colander, and spread upon a dry towel ;
fry a few at a time in very hot fat, 1 minute being sufficient to cook and brown them properly, sprinkle lightly with salt, and when needed at table, heat quickly in the oven.
Wash potatoes and bake in a hot oven forty-five minutes
cut in halves lengthwise, remove potato, and force through potato ricer; add cheese, seasonings, and hot milk; beat vigorously, and refill potato skins ; place half a slice of bacon on top of each, and put on the upper grate of a hot oven until bacon is crisp.
Melt butter and add hot milk and flour, when thick add salt, pepper and parsley.
Put a layer of mixture in bottom of baking dish, then a layer of potato, and so on; milk coming last.
Cover with cracker crumbs and bake 15 minutes.
Butter a baking'-dish, pare and slice potatoes in small pieces.
Put into the dish with salt, pepper and a little butter.
Fill the dish with milk, sprinkle over the top cracker,or bread crumbs, and cheese if you like it. Bake in the oven for an hour and a half or two hours.
Cut cold boiled sweet potatoes into eigthths lengthwise, fry in deep fat until brown, drain on soft paper, and sprinkle with salt.
Cut a small ^gg plant in one-third-inch slices; pare; cut each slice in quarters; soak in cold salted water for half an hour; drain; season with pepper and salt, dip in crumbs, then in egg, and then in crumbs again; and fry in deep fat about three minutes. Or dip in flour and saute' in butter.
